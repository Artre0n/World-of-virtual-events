<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADuGwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABuoSURBVHja7Z0LdFT1ncf/VEhCurwmd153bkjV04ruFquAoGhP1/XF2rN7auuerbuy
        IITMI4AvekBqrSLtWU+1XapdrQKZmVCKgnS17Xa31UCSCWiVPT4At75WI2jpuhWsSpIZ7v5+//lPAM1k
        HplH7r3fL+d7JidM5nHv//e5/8fv/n9CQBAEQRAEFSXNHxKaNyTcehi2uTV2ICRc7ojQfCE0fqfKFVgq
        rp8QEO5AumF4GiP8WE92k3WyAdvOfi0QdjUEQuMGz7seIocREI664tMVgO2mk+8ORGqpIZxHXkXeRt5D
        fp3cC9vOL5N7yBvJzeTTDT04RvYOGsPyYgDZXPJkU/CLq+byz+eS15PfIZuwozxA3k++lRxw+8OiQQ+S
        MSywb/D7w/KqT92+Gjrpi8mvIhAc72PkHeQLG33Lhca9Qj8gYM9uP59cX4i7/CvIR9D44RP8O/Jfu5uW
        chsBBOykBiMoNLJJ/9SVH8EPD+VX0xBYBgjYSbNq16ploNBMenwNDR0GBJw09uclHyPMXf8NaOAwIOCk
        sb8xmOBzXp6z/R+R38aSmaV9kJwsBQQ8DAF/SE4gQ1YEQGNQeLytQq3z5zrpvEZ8rccfmYakGcuak7hm
        KQiUoicwzz01nF5BAgSsue6vpTP8tuUR/NNkchBSZq1uXfUEsp3rPvIfAAHHJP7I9N49Obr918rn+rm3
        0IoDZ+Xzne4JDAeAt1Qm4MsFQwBzAtaSR4+w9Ryz/28T2adlriCQ7QHQK7P/9PDl5FcKmhP4zI0EgSAg
        YMMGYSD4nQUALdDCXforAAE0CADAoedbMxYBAmgQAIBTz7fH1woIoEEAAE49325/BBBAgwAAnHy+AQE0
        CADA4ecbEECDAAAcfr4BATQIHDCHn29AAA0Ccvj5BgTQICCHn29AAA0Ccvj5BgTQICCHn29AAA0Ccvj5
        BgTQICCHn29AAA0Ccvj5BgTQICCHn29AAA0Ccvj5BgTQICCHn+8hIPByYRC4Kb3bsB7BSQMAICue70EI
        NBbVE5jn8i2WAJDFaiEAALLe+WYI8EayWmAxQ2BeARDgWoQXyr9vDOLEAQBQKZTvJrCaPyS3gNf8wRJB
        IELDgeZCIdBBnyGgtq7HyQMAoJGfbx5Xh/LZBn6+J9AqXN4WgkCoRBCgtjZVtrd5eZae59Lk35w4NTxG
        C6DtOQoAPl9EGG55tTpe0IIagT51ufAauesScKnzBt+SdN3DwYIYITHFs0Q0DHFV8xgh4Z3aclIBDX6N
        ie7rhMvXYrfznU8hmF107Kd5ApHSFyYx5OPleU4M7qer/+np7cmWIWCdAAA3NTovmanv8bfWufWIj97b
        5zYidRyUbi5nHsjeNfWoCjXeAI89wxMo8E+n31EjCk3wGkvpinZyfQN+P9nQedIqEK6T70WmK18d/95l
        LBn2/awkzUvHtDGcbym4XRR881VNiFKWJwsoN+dRgWhAlqwPENC9NyJg7Q4ATV7pI+LTU5p5Bvh8es8Y
        +SXlKHnOZ8bfKYNyqCuzh3eypQDX3eEx9NxLyT9XlW7Yv+Arj8u7bIwmx8Jh0aC3yuAfO2EBH4c5J7zf
        fvXzHGPiahq/Bm0xG52Bn6oP+HYeEDhaxmKwb6kyZLk+wwa3v3UclgRtDgCv92ZqoEszn+lCFYQf/yz7
        OCg5aCdo133yNTLdTH/4S/T4+hB//wb5ErnlNXmyfr16Pwmbod6Pf3ehxr0DIyI/o+XPOYGMzOXg11uk
        HHmC7MIclM0BoHFXm2ee9fBUeq8dw3yeGD2nbqiZYfV9xpM3D/P3j1Dw13vU7DL1BmpV7yLb83fS55oq
        Pxt9Rqtr9rjbM8dpRp6TcdU2zxX4AQAbA+CEqsM8QfWjXBNDapw+9Pfxy+q3v8unQSn7VLd/uPekzxSp
        z0wOWlkNcg6Fjp0ZE3J8rYePjHIAvKnmDBCwdgQAd0k1PShm/GWcP0uQ/MGIAKCHzyYfypFkUigA+DMF
        MysMVp8PYADI+RZfuIa+1wry4VEMACxD2xUAhnGD8Daq2vJ6+Ivk/8mjQUS9vkitxx/J9n2uyHFV6yZP
        Ob68GKlTE3653pfnD77IE2nexhah69YeDqhjLjyBEENg0SgeDgAAdgWAyx9MX1H1cGOOcX/GDIgL+OoV
        8JycD6BprZnvs4DcP9wcAP39eH4NvWm5THTh18wyaZhlPiC9gmCT8y8evXI1P55LfijP1QEAAAAoTeNT
        k3b35dEQ0t3w2stk0HKy0ImaPPF6mdCTxxr3Om9DcIzMFTBaZbKQEF/lv1uSx/AjPR8QCNtiPiBzHjRe
        GaAelVeXqwO8RLiSvJX8rEob7i2jD5KTAICDAKCp4J8waVHJAo/zB9zGMl7/X5fjdVZRt1dMmXTzyEAk
        v4dN8gOalojTxFq5NJouCy7vwuPj4Vb3Dhhlsq6AcxAAcAgAeNyvcQJO+r0vynPcvyNX15uv5J6ADOJH
        hnmdfjVEEG738mxDkY785wMitpgPOFEe6l15fKHBlZmT0rHLYx33ojgIAOUKtvQSYGiKmuTL9lqHVR56
        RaAEje45KJyASt8fXsbutsoBCOS43fT39JzpQ32XcgxLIAAAJ6BCAaa+y3QZ5Nlf7xW3P5I1qQTzAQAA
        TkAZTkAlutiF5gBUeogCAQCOPQHlDqpicgCqCSunqiuaFF1tKdEdT4ruWFI0f32bqHctzDkJWD9lob50
        /uPybyxv+u47N6VEZ3vSGQCoRLe6mByAag5XnBX0A+T+wQBIxGUQ1NDPk1981HQ3//3WGV6jNesyIP9f
        yzXbZz231dTpbwyLmj+7l79zd3uypqftRCgMiB0PDgjTNO0HAE9gqVyfF+KqsgZSsTkAZQFXzaVyLz2v
        17mbWfY8bIrO9QPUuFOyke951BQqAC4j30KOkXf0xFMvPPovh9743Bkrk5o/9Iljyr/j/9u+7tDBRDzV
        S39jVb9GfpG/s/ruq9Sx8PVs6huTBkFK7GofEB0bTfsAwCu70/LKPLecqbYjyQEoYOiSb6ryXI2ApDcs
        duYVnxpyV/QYPSb5cSw9nksN/A7yU+TDZDNjCmrz3374v+a0M28xswGA/4+fw8898W9tYD4Wz5LXks9J
        xI6NlT2kaErCwBYAkPu66/Jmm3i+4/50im64oMm0keQA5Jq8lOnCx29WeiOP7xGj59flGmbYTR0dpkhs
        GJBX/Kc2fyi64skz6Od71BVwyCBwOABONB+j75OndcaPymO4o21A7H3YtDoA8r7dlreeahVnzxNe3kG2
        wF1gR5oDkKt3wZ+JPxt/RvVZh/suL2W7Xdmu6oybYtd6GudH6QoWG6ijBrxAdXmHbfgAwCe8l7ywOzYw
        nidM//Oho2J3uwkA5Pk+I8oBKCEA9jsJAN2bTfH0D/9PzXCnNHq8m/x+Pg0eABjSf0r3nFIaQ6Bj+wti
        5wbTwgAIVGgIUIIcgJIOARwAAO6i7niwT81mp3imu52cyrexAwBZnZLHMprSedVk18NHxTMPmNYDgLep
        JbMTbdkmAUuZA1C6ScCwaHTbPx+Ax6k82Zdol1f+eKENHQDI6U3cE2DAdrUPWHAZkNfmZXf+yrItA5Y6
        B2Dky4CXDLlfge26/tFUZh27Tk32pQCAsvQE7uZ5lQSDttSrA3ZIBCpHDgASgXKv8zMAerZ8JNSE3/vF
        NHAAIC/zsV3QEftIJKLHxC/XmdYCwBBd6ZKmApc6BwCpwHms9XOSj5zxT05TM9cmAFBW84rKNJ4PeHrL
        gPUAUM6gKnUOAG4GGl6cssqJKipx5fsjadgAQEG+pzNqjuVEq5KlDdvhduBS5gDgduA8Jv5+nL76c/Ya
        +U0AoGJ+Ux1zee+A5QBQrgArVQ4Axv35KREbEP+9/ggD4M6RNmoAoGCvMc1XRU+7RQFQji52KXIAMO4v
        YPY/fRcb39jzDABQcf+2KyqPvXUBUMpgK1UOAMb9eQb/xsHbWC/7+I09AEDFbiC6VN401Ja0JgBK2d0u
        RQ4Axv0FzP5vTInudgmAW0rRoAGAoryyi85Bz8aUdQEwosCrvXzwfvuR5gAcT1T6Osb9+Yz/o/LKU6Pu
        aQcAquNoTyxZk4glrQ2AIbre+ZcGo6D1a80jzgHwNi2RFXGcWhqsyPH/ZPJOAKBq7kikz4H1AVB8cdBQ
        rUcVt3T7Q65icwB4vwKPQ4uDjnAC8EUAoGp+geyxBQDSmXzFlwdX9quS39mefyhbDkD67yOOKw8+QgDo
        aosrAKA6fk2dA3sAIP05QpnPUi/H2IUBwKd+l32DDr8sP5Xt++cDAPpMEcdv+KkAYAy3yw8AUJHdgwxb
        AUBeWY0lMrhofD01x3xAlJ5Tq67e1IVvzdWFb6Mrdu1Qm4ykA1q+VjT3uD8kP6OTBQAAAGWT13uz0PxL
        M0E5N8tVfR8F8hwPBfNkb1joTct4DoD/Zo78vyGfH5rNz+cJx4+rQW/JHINsf79f3t/vJ9AYEfkZAQAA
        AAAoVy9A1qoPCmPirZmgjKog3K9+nuMd/w3RYARFg9w5qFX4DOqS/9lNJz5/n7J8vvh0WD5nqK47/67B
        aBF63Z1Dv18gPNsz6Ua1XIi9/gEAAKD8ECAAuIyWE7vnPEb3eX3hWl7++3gw8tWdtxDzyOFDhJ/vZVNw
        13oCdNWm53qHKypK7+cJtAjeytujBwffj1+LcwcYNgh+AAAAqOAed3x1n+IND2YMyjr19LuAp3XInXZ4
        TX6yvvykuvN8dZ+oLRIuX0sew4+g0F1LTpyMlJ7sX45SXwAAAIDijBAAAAAgAgAAAAAAgAAAAAAAgAAA
        AAAAgBwJgAMAQNV8AACAqgkAP/lp1RBHVDabS35z6W8HlAcvlQ+oY+8HAKBqAeAU1QCNkfq5rabecs32
        WV6j9WC29sf/x8/h55biPW1gvzoHAABUFQCUzEvnPy7qpyzUc7U/fg4/t9Tvb3UDAJClhfaHEwCh/aH9
        4QRAaH9ofzgBENof2p/9TgDftqs3nXyzDmxdn/Xnq8UdyxOiMzqASUBMAuYI/gDfjx9Re+nJDTh96vVg
        i3r69NuM+27dazy/zTQS8RSWAbEMmP3Kz8Ev6pv5fc5XW3ftV68JW9RTT72h94qL7+29/9svIREIiUDZ
        5W9aJrT0ll3n59i4E7aYOTjP/cId5oY7XzF7ikzTRSqwzVOBPYXtuw9bzC5f0Py7L7eZHRuOAgC4GSjr
        6/tw9benGyhAz/nC7ebP7/tjUQEKAAAAMAAAANgVAFwCnFyXY999GEMAAMCOAPC7muVuu2rLbfQCbDQB
        yMHPV/8NazEJCABkWwb0BsUUY4mYOW7Nx/fdx3KaRc3r8mdPvy3JV34OfmwIAgAMK5fBEOB990PC6x/c
        5x8JNRY0Z+QFr9k+67F73z3I3f6eEQYlAOCQLcF4L3/D3SoGS3rDljSn43JGnkrKwZZgAADkJGFPQCQC
        QQAA9gREKjDkYABgT0DcDAQ5GADYExC3A0MQ2h9OAASh/eEEQBDaH04ABKH94QRAdlW1JgGztb9qT7ph
        EhByIgAqugyYBwBK9nkKXXar0PtjGRAaVQCoWCJQngAo2ecpNPGmAu+PRCBo1AGgYqnAeQKgZJ+n0NTb
        Cr0/UoGhUQeA3lEGgN5q3HxToffHzUAQAAAAAAAQAAAAAAAQAAAAAAAQAAAAAAAQAAAAAAAQAAAAAAAQ
        AAAAjDoAcJVgvWk5NtbEpqAAgNMA4A2EZYlwTQ8Jd7pQKLYFt/C24C0V3BYcALB6YRC68nPwi/rmTInw
        GAqDWL8wyPTptyWv/nKbuf7OVwAAACC7/E3LBJ3YTPCjNJgNS4MxBMpVGgwAsHxx0IjwpLv9MQQOioMC
        ACgPDqM8OAAAAMAAAADggCFAmF2nqgIjaDAEAAAcNQnoahZaIJIpDY5egA0nAblEOCYBAYChlwG9XBp8
        iZg5bk0GAlEsA1p/GfDs6bcl+crPwY9lQABgWLkMhkAL9QRCwusP1yIRyNqJQEEkAgEAhcrniwjD3So8
        fqTTIhUYAMDNQBBuBgIAAAAIAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAI
        AAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAI
        AAAAAAAIAAAAKgIArhKsNy133CaauqtZbo0OAAAAjgWANxCWJcI1PSTc6UKhTtgWnL5jqI6LojTwluhG
        CAAAABxYGISu/Bz8or45UyI85pDCIPtVEZQ5Z477FkEgKLdGBwAAAGeVBmtaJujEZoLfiaXB+DvP0agX
        xHURAAAAwGHFQSPCk+72xxxcSy/KFZG4KAoAAACgPLgzewE+O6yiAAAAAAAAAAAAAEC+Q4Awu05NiDkV
        AG1uLoqKIQAA4LhJQFez4KUwVRrcib2AfZoenu2hYzDBfR0AAAA4bBnQy6XBl4iZ49ZkIBB10DJgGwf/
        WeNaxeTGkHD5WgAAAMB5iUAugyHQQj2BkODZcMckAvHMP135ZfAb9kijBgAAgKLESTC8Ds5LYY5JBabv
        yt1+O1z5AQAAADcDQQAAAAABAAAAAAABAAAAAAABAAAAAAABAAAAAAABAAAAAAABAAAAAAABAAAAAAAB
        AAAAAAABAAAAAAABAAAAAAABAAAAAAABAAAAAAABAAAAAAABAAAAAAABAAAAAAABAAAAAAABAAAAAAAB
        AAAAAAABAAAAAAABAAAAAAABAADAiCSr9+oRnQ7ua8MA4G06OdPcekho/iCiAAAoWYPvIQD89HsHzM+e
        sTIrAPyNy3qbTrvJmHrqjQBA6XsAIbabDvSeYQDwEXm+J9AqXN4WgkAIkQAAlKTB72o/Zq65vsfUpy7L
        Wl7tc2es7L34oh8Yc+fcBQCUaQhQT96Wo8bdLuopTPOk6/zBDvXS+Y+L57aaOnXde7n7Xqz5ys/Bz1f/
        ubPvMhuyXP25V/ClC+95664VvzVWtjwxXAAeKGPAHcgDAAcqCIADJQOA5g0LT6M8uavyKHS5S6OegNsf
        nuaA0l7wEK6fslBvuWb7rO3rDh3ksXux3nL3AXnl5+DP1e4WXr3lhb3bTd+/3384WwD6yU+rwOgtsQ+o
        1/YPA4Byvn9Bn6dwABwv1TWLx/p5QOCoel4v7Ex7jdaD1C1P8sRdseYxP3f7G7JP/El79PA7F8z+578y
        TXPM0z8xswXgKSogjDLZr96jWu+f9+cpbhgQCLG5aOd6B5bvhoswd81H6jzf6yEx9ms1l1z0AzFMAFbM
        1X7/XJ+nKM0ed3umFzCT/CoaODxK/KoWCM9wB8JCn4kl6LKpwQgKzQiLr4obGAKLyEfQ+OAqm9vgYrHg
        SqHxSpUbACiriLR0oKkX4AvX0IFfQT6MRghXMfhXUHus4TbJbROqgNxqQtATCNWongCGA3ClzQlpizR/
        KB38yD6tMATUeu+jV67mx3N5EibP1QHYiZOBpZkQTJEPNPiCD05yL56x8/4+cc+q/xK72o9VfZJttHn3
        5gHxy3Vm+SGg8cqAPyK8ulwd4CXCleSt5GcVpbEkBvc2nXrje2cWsQx45pmr+886a/XvP//5b+0+b+ba
        e78y76GvxL77+un7fmb6e+Ipo4JLalZxI3lCRQAg5wSalojTxFrhUT0CzYjwUuF4+tmt7h1AYozDXTPx
        Wv2uFc9cvX3doXcKTQR67N53U7/41/eOPrH+w3cp4N/oaT/2RqL8STRWNSf/9HTFkrN6NiUrA4CTbhjy
        h4THF1L3DYTlDURIi4VnnLNGcILOrk1mSyKeOlxUWnDl0met7D+S53e2m2O6YscqDwAIGkoJHpfGkyLR
        nhxHDfQb5A8QrCU3H9ObemL9Y9PzAMfQ8KBRdHdgfHCCajz5O+Q+BG3J3M/HtCuerCtp5h8ElVKdG5Oi
        K0qOJydQI72XnETwjth8DO8jwE7kY8vHGIJGpUzTFDvXD6R7AvFUAz3GEMAjdnt3LKVxD6urbUAeYwga
        tep52BSJeF96SBBP6tSAtyOIi/ZjFPzyfv+nYn2iYyOCH7LCUGCDKfa0vUfDgRT3Bk4j/xrBXLA7yJ9N
        xFLiV5v7RGccwQ9ZqSfQTr2A9v70CkEs+Rfk3QjqvM0bfZzNx25nfICCvx8NCrKeumTwp+hRzgvMJj+P
        4M7pfeQLuinwuQfVhRl/yMriLmx3PCUSbbIncDH5FQR5Vr9OAX/5bgr6Th4+kSHI8konCaXEzof6uUfw
        N9TQ30Kwf8Jvk7/21IMfUpcfV37Ibj2B9qTsDez5nsk9gX8g/wFBP+h3yQt2/dQcw72lrjiu/JAdewKx
        pJwU3BU/+in6OUQ+jOBPvk9etjvePzah5kwgyMZzAulEoc6YvG9gJflDBwf/R+RvJuKpmoSCIwTZXl2x
        k+4b+K5D7xvg/P67aFhUn0B+P+Q0Ze4b6HbmfQMp8gPdbclJDMOd7Qh+yGHinPZOdd9Awnn3DfykO5py
        89JoJ+f3fxtZfpADxfcNdLX1ZYYDTrlv4DEKfpnfv/uBP4mOhxH8kKMnBU2x97Ejmay30ykwfmP3/H6e
        6e9czzkRCH4IkvcNJNr7Mz0Bu943MJjfz93+rjbk90PQoHgyrIvThu1538Be8vnd0QGZ5IMsPwgaQt3q
        voGujba6b+A18mVPxpOiJ57+fhAEZZsT4EBpT4mOH/fzEuHfUvC8qO4dsNoW3m+lr/ypq3ZvpiFONCV6
        cOWHoPwgIFOGNwyMoSDyWriIh3fnxmOfkhOcuLMPggqAQDQpbfUSXgh+CIIgCIIgCIIgCIIgCCpScpJt
        FEwS4lZeCKoeAOqqvdRHAKgDACCoOgBopMdt5INVSPTh99xGAJgKAEBQhcUbjHbG5A1EF6hc+2rs3z83
        0TaA9F4IqgYAOL22K12W/JIK3zeA/H4IGg3DAK438OSDfN9Aiu8bOFCB4D+I/H4IGi09gbjcUkzs3iTr
        DfxjmesN8P79//TkBnMM37qMFF8IGhU9gZSsPrQzdvQUCtBwmeoNHCEv7d7Qd0p6+RHBD0GjRlyAVDou
        6w2sKnG9AX6tW8g16dWHARxwCBp1PYF4Ml2HMJ6sV/UG+ku5f383kn4gaJT3BNoGMwQnkn80wnoDvH//
        /YlYchKvNmD/fgga5Tqp3kB7SqPH+Ij375evhf37IcgS4noD3Q8czfQEAuSfFbV/fyxl8JDi+S0fiv/A
        Ft4QZKH5gM2m+PUjH8glwu7C6w08Kffvp7/9zX39YucGBD8EWU6d0T7RFSu43sBT5OnYvx+C7NATkCsD
        g/UG5uSoN/Ci3L9fLili/34IsgcE5I1DKdETHaw38NIQwc+/u2THpqRM8UWiDwTZSF1q845fberL9ASi
        5P3Kbfy7J7YcFT1t6d2IIQiymRgAHOCy+lBsoJaC3sdOROln+h2CH4LsPhxo6xOJ9R/ItOHj23rRmJ9+
        x/8HQRAEQRBkH/0/7SHgjuJw8uIAAAAASUVORK5CYII=
</value>
  </data>
</root>